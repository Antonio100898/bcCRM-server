25/12/24 12:09  GetDataSet Exception Message: The multi-part identifier "problemTracking.id" could not be bound.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved, problemTracking.id as trackingId FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + CAST(problemTypes.id AS VARCHAR(10))), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT [problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

25/12/24 12:09  GetDataSet Exception Message: The multi-part identifier "problemTracking.id" could not be bound.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved, problemTracking.id as trackingId FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + CAST(problemTypes.id AS VARCHAR(10))), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT [problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

25/12/24 12:09  GetDataSet Exception Message: The multi-part identifier "problemTracking.id" could not be bound.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved, problemTracking.id as trackingId FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + CAST(problemTypes.id AS VARCHAR(10))), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT [problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

25/12/24 12:09  GetDataSet Exception Message: The multi-part identifier "problemTracking.id" could not be bound.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved, problemTracking.id as trackingId FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + CAST(problemTypes.id AS VARCHAR(10))), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT [problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

25/12/24 12:09  GetDataSet Exception Message: The multi-part identifier "problemTracking.id" could not be bound.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved, problemTracking.id as trackingId FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + CAST(problemTypes.id AS VARCHAR(10))), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT [problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

25/12/24 12:09  GetDataSet Exception Message: The multi-part identifier "problemTracking.id" could not be bound.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved, problemTracking.id as trackingId FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + CAST(problemTypes.id AS VARCHAR(10))), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT [problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

25/12/24 12:09  GetDataSet Exception Message: The multi-part identifier "problemTracking.id" could not be bound.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved, problemTracking.id as trackingId FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + CAST(problemTypes.id AS VARCHAR(10))), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT [problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

25/12/24 12:09  GetDataSet Exception Message: The multi-part identifier "problemTracking.id" could not be bound.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved, problemTracking.id as trackingId FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + CAST(problemTypes.id AS VARCHAR(10))), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT [problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.workerId = 176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

25/12/24 12:09  GetDataSet Exception Message: The multi-part identifier "problemTracking.id" could not be bound.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved, problemTracking.id as trackingId FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + CAST(problemTypes.id AS VARCHAR(10))), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT [problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

25/12/24 12:12  GetDataSet Exception Message: The multi-part identifier "problemTracking.id" could not be bound.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved, problemTracking.id as trackingId FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + CAST(problemTypes.id AS VARCHAR(10))), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT [problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

25/12/24 12:16  GetDataSet Exception Message: The multi-part identifier "problemTracking.id" could not be bound.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved, problemTracking.id as trackingId FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + CAST(problemTypes.id AS VARCHAR(10))), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT [problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

25/12/24 12:37  GetDataSet Exception Message: The isnull function requires 2 argument(s).
Incorrect syntax near 'pt'.
. extraInfo: sql: SELECT  tTracking.id as trackingId, problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + CAST(problemTypes.id AS VARCHAR(10))), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT IIF(isNull([id]), 0, [id]), [problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

25/12/24 12:37  GetDataSet Exception Message: The isnull function requires 2 argument(s).
Incorrect syntax near 'pt'.
. extraInfo: sql: SELECT  tTracking.id as trackingId, problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + CAST(problemTypes.id AS VARCHAR(10))), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT IIF(isNull([id]), 0, [id]), [problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

25/12/24 12:37  GetDataSet Exception Message: The isnull function requires 2 argument(s).
Incorrect syntax near 'pt'.
. extraInfo: sql: SELECT  tTracking.id as trackingId, problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + CAST(problemTypes.id AS VARCHAR(10))), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT IIF(isNull([id]), 0, [id]), [problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

25/12/24 12:37  GetDataSet Exception Message: The isnull function requires 2 argument(s).
Incorrect syntax near 'pt'.
. extraInfo: sql: SELECT  tTracking.id as trackingId, problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + CAST(problemTypes.id AS VARCHAR(10))), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT IIF(isNull([id]), 0, [id]), [problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

25/12/24 12:37  GetDataSet Exception Message: The isnull function requires 2 argument(s).
Incorrect syntax near 'pt'.
. extraInfo: sql: SELECT  tTracking.id as trackingId, problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + CAST(problemTypes.id AS VARCHAR(10))), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT IIF(isNull([id]), 0, [id]), [problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.workerId = 176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

25/12/24 12:37  GetDataSet Exception Message: The isnull function requires 2 argument(s).
Incorrect syntax near 'pt'.
. extraInfo: sql: SELECT  tTracking.id as trackingId, problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + CAST(problemTypes.id AS VARCHAR(10))), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT IIF(isNull([id]), 0, [id]), [problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

25/12/24 13:44  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 13:44  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 13:44  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 13:45  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 13:45  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 13:45  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 13:45  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 14:00  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 14:00  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 14:04  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 14:05  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 14:06  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 14:10  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 14:16  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 14:17  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 14:17  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 14:19  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 14:20  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 14:20  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 14:21  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0559224777

25/12/24 14:24  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 14:24  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 14:43  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 14:44  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 7acbe021-8bba-408d-907a-c3a8d738a60a phone: 0549082507

25/12/24 16:26  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 13b43e3c-0d61-4b40-b94a-d5be7b1ea0ba phone: 0544507664

25/12/24 16:43  CallThisNumber Exception Message: Unable to connect to the remote server
. InnerException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 199.203.227.131:6560
. extraInfo: workerKey: 13b43e3c-0d61-4b40-b94a-d5be7b1ea0ba phone: 0546745455

