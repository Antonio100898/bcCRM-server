18/09/23 17:09  GetDataSet Exception Message: A connection was successfully established with the server, but then an error occurred during the login process. (provider: TCP Provider, error: 0 - An existing connection was forcibly closed by the remote host.)
. InnerException: An existing connection was forcibly closed by the remote host
. extraInfo: sql: SELECT [id], [firstName], [lastName], [phone], [birthDay], [workerTypeID], [userName], [password], [userTypeId],[shluha], [active], [imgPath], [wDepartmentId], [jobTitle], [teudatZehut], [guidKey] FROM workers WHERE [guidKey]=@workerKey;

18/09/23 17:24  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

18/09/23 17:24  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:25  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:25  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

18/09/23 17:25  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:27  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.workerId = 176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:28  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.workerId = 176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:28  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:31  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.workerId = 176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:31  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:31  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:31  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

18/09/23 17:31  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE statusId<>2 AND (problemsClose.startTime>=GETDATE()-1) ORDER BY problemsClose.startTime DESC

18/09/23 17:31  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE statusId<>2 AND problemsClose.departmentId=0 ORDER BY problemsClose.startTime DESC

18/09/23 17:31  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

18/09/23 17:31  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

18/09/23 17:31  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:35  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

18/09/23 17:35  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:35  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

18/09/23 17:35  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:35  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

18/09/23 17:35  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:35  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

18/09/23 17:35  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:35  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:35  GetDataSet Exception Message: Ambiguous column name 'id'.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

18/09/23 17:40  GetDataSet Exception Message: Conversion failed when converting the nvarchar value 'כללי-red-' to data type int.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + problemTypes.id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:40  GetDataSet Exception Message: Conversion failed when converting the nvarchar value 'מדפסות-blue-' to data type int.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + problemTypes.id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

18/09/23 17:41  GetDataSet Exception Message: Conversion failed when converting the nvarchar value 'כללי-red-' to data type int.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + problemTypes.id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:41  GetDataSet Exception Message: Conversion failed when converting the nvarchar value 'מדפסות-blue-' to data type int.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + problemTypes.id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

18/09/23 17:41  GetDataSet Exception Message: Conversion failed when converting the nvarchar value 'כללי-red-' to data type int.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + problemTypes.id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:41  GetDataSet Exception Message: Conversion failed when converting the nvarchar value 'כללי-red-' to data type int.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + problemTypes.id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.workerId = 176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:41  GetDataSet Exception Message: Conversion failed when converting the nvarchar value 'כללי-red-' to data type int.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + problemTypes.id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:41  GetDataSet Exception Message: Conversion failed when converting the nvarchar value 'מדפסות-blue-' to data type int.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + problemTypes.id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

18/09/23 17:41  GetDataSet Exception Message: Conversion failed when converting the nvarchar value 'כללי-red-' to data type int.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + problemTypes.id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:41  GetDataSet Exception Message: Conversion failed when converting the nvarchar value 'מדפסות-blue-' to data type int.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + problemTypes.id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

18/09/23 17:43  GetDataSet Exception Message: Conversion failed when converting the nvarchar value 'כללי-red-' to data type int.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + problemTypes.id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:43  GetDataSet Exception Message: Conversion failed when converting the nvarchar value 'כללי-red-' to data type int.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + problemTypes.id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:43  GetDataSet Exception Message: Conversion failed when converting the nvarchar value 'כללי-red-' to data type int.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + problemTypes.id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.workerId = 176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

18/09/23 17:43  GetDataSet Exception Message: Conversion failed when converting the nvarchar value 'מדפסות-blue-' to data type int.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + problemTypes.id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE tTracking.problemId>0  ORDER BY problemsClose.startTime DESC

18/09/23 17:44  GetDataSet Exception Message: Conversion failed when converting the nvarchar value 'כללי-red-' to data type int.
. extraInfo: sql: SELECT  problemsClose.id, problemsClose.workerId, problemsClose.phoneId, problemsClose.phone, problemsClose.ip, problemsClose.placeNameId, problemsClose.placeName, problemsClose.customerName, problemsClose.problemDesc, problemsClose.problemSolution, problemsClose.statusId, problemsClose.emergencyId, problemsClose.departmentId, problemsClose.reportToYaron, problemsClose.startTime, problemsClose.finishTime, problemStatus.statusName, workers.firstName + N' ' + workers.lastName AS workerName, departments.departmentName, problemsClose.toWorker, workers_1.firstName + N' ' + workers_1.lastName AS toWorkerName, workers_1.jobTitle as toWorkerJobTitle, tFiles.[fileCount], tFiles.filesName, problemWorkers.workerId as toWorkersId, updaterWorkerId, workers_2.firstName + N' ' + workers_2.lastName AS updateWorkerName, workers_2.wDepartmentId as updateWorkerDepartment, places.vip, problemsClose.takingCare, problemsClose.isLocked, problemsClose.callCustomerBack, problemTypesInfo, pt.pCount as isInvolved FROM problemsClose LEFT JOIN workers ON problemsClose.workerId = workers.id INNER JOIN problemStatus ON problemsClose.statusId = problemStatus.id INNER JOIN departments ON problemsClose.departmentId = departments.id LEFT JOIN workers AS workers_1 ON problemsClose.toWorker = workers_1.id LEFT JOIN workers AS workers_2 ON problemsClose.updaterWorkerId = workers_2.id LEFT JOIN places ON places.id = problemsClose.placeNameId LEFT JOIN (SELECT[problemId], Sum(1) as fileCount, STRING_AGG(ISNULL([filePath], ' '), ', ') As filesName FROM[dbo].[problemFiles] group by[problemId]) as tFiles on problemsClose.id = tFiles.[problemId] LEFT JOIN problemWorkers ON problemsClose.id = problemWorkers.problemId LEFT JOIN(SELECT[problemId], STRING_AGG (CONVERT(NVARCHAR(max),problemTypes.problemTypeName + '-' + color + '-' + problemTypes.id), ',') As problemTypesInfo FROM[dbo].problemTypeDetails  LEFT JOIN problemTypes ON problemTypeDetails.problemTypeId = problemTypes.id group by[problemId]) as tTypes on problemsClose.id = tTypes.[problemId] LEFT JOIN(SELECT[problemId] FROM [dbo].[problemTracking] WHERE workerId = @workerId GROUP BY [problemId]) tTracking ON problemsClose.id = tTracking.problemId Left Join (SELECT problemWorkers.problemId, Sum(IIF(problemWorkers.workerId=@workerId,1,0)) as pCount FROM [dbo].[problemsClose] inner join problemWorkers on problemWorkers.problemId = [problemsClose].id WHERE statusId<>2 AND problemWorkers.workerId = @workerId Group by  problemWorkers.problemId) pt on problemsClose.id = pt.problemId WHERE problemsClose.toWorker=176 AND problemsClose.statusId<>2 ORDER BY problemsClose.startTime DESC

